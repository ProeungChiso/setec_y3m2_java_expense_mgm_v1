/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package expense_management.java;

import config.DatabaseConfig;
import java.io.File;
import java.sql.*;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author user
 */
public final class UpdateProductForm extends javax.swing.JFrame {

    /**
     * Creates new form CreateProductForm
     *
     * @param productName
     */
    private String proName;

    public UpdateProductForm(String productName) {
        initComponents();
        getAllCategorys();
        proName = productName;
        getProductByProName(proName);
    }

    private void getProductByProName(String proName) {

        String sql = "SELECT * FROM product WHERE product_name = ?";

        try {
            Connection conn = DatabaseConfig.getConnection();

            PreparedStatement psm = conn.prepareStatement(sql);

            psm.setString(1, proName);

            ResultSet rs = psm.executeQuery();

            while(rs.next())
            {
                String product_name = rs.getString("product_name");
                int product_qty = rs.getInt("qty");
                Double product_price = rs.getDouble("price");
                String product_image = rs.getString("image");
                
                inputName.setText(product_name);
                inputPrice.setText(product_price + "");
                inputQty.setText(product_qty + "");
                
                if(product_image == null || "".equals(product_image)){
                    btnChooseImage.setText("Select Image");
                }else{
                    btnChooseImage.setText(product_image);
                }
               
                System.out.println("GET: " + product_name + product_qty + product_price + product_image);
            }

        } catch (SQLException e) {

        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        createTitle = new javax.swing.JLabel();
        inputName = new javax.swing.JTextField();
        inputQty = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        inputPrice = new javax.swing.JTextField();
        comboCategory = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        btnChooseImage = new javax.swing.JButton();
        updateProduct = new javax.swing.JButton();

        createTitle.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        createTitle.setText("Update Product");

        inputQty.setText("0");

        jLabel1.setText("Product Name");

        jLabel2.setText("Product QTY");

        jLabel3.setText("Product Price");

        jLabel4.setText("Category");

        inputPrice.setText("0.00");

        comboCategory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboCategoryActionPerformed(evt);
            }
        });

        jLabel5.setText("Image");

        btnChooseImage.setText("Choose Image");
        btnChooseImage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChooseImageActionPerformed(evt);
            }
        });

        updateProduct.setBackground(new java.awt.Color(0, 0, 255));
        updateProduct.setForeground(new java.awt.Color(255, 255, 255));
        updateProduct.setText("Update");
        updateProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateProductActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(createTitle, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(inputName, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(inputQty, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(inputPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(57, 57, 57)
                                .addComponent(jLabel3)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(comboCategory, 0, 107, Short.MAX_VALUE)))
                    .addComponent(btnChooseImage, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(updateProduct, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(25, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(createTitle)
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(inputName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(inputQty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(inputPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnChooseImage)
                .addGap(18, 18, 18)
                .addComponent(updateProduct)
                .addContainerGap(24, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private int categoryId;

    private void comboCategoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboCategoryActionPerformed
        // TODO add your handling code here:

        String selected = (String) comboCategory.getSelectedItem();

        System.out.println(selected);

        String sql = "SELECT category_id FROM category WHERE category_name = ?";

        try {
            Connection conn = DatabaseConfig.getConnection();

            PreparedStatement psm = conn.prepareStatement(sql);

            psm.setString(1, selected);

            ResultSet rs = psm.executeQuery();

            if (rs.next()) {
                categoryId = rs.getInt("category_id");
            }
            System.out.println(categoryId);

        } catch (SQLException e) {

        }


    }//GEN-LAST:event_comboCategoryActionPerformed

    private String imagePath = "";

    private void btnChooseImageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChooseImageActionPerformed
        // TODO add your handling code here:
        JFileChooser fileChooser = new JFileChooser();

        FileNameExtensionFilter filter = new FileNameExtensionFilter(
                "Image Files", "jpg", "png", "gif", "jpeg");

        fileChooser.setFileFilter(filter);

        int result = fileChooser.showOpenDialog(this);

        if (result == JFileChooser.APPROVE_OPTION) {
            // Get selected file
            File selectedFile = fileChooser.getSelectedFile();

            // Store the file path
            imagePath = selectedFile.getAbsolutePath();

            System.out.println(imagePath);

            if (imagePath != null) {
                btnChooseImage.setText("Image Selected");
            }
        }
    }//GEN-LAST:event_btnChooseImageActionPerformed

    private void updateProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateProductActionPerformed

        String productName = inputName.getText();
        int productQty = Integer.parseInt(inputQty.getText());
        Double productPrice = Double.valueOf(inputPrice.getText());
        int productCategory = categoryId;
        String productImage = imagePath;

        String sql = "UPDATE product SET product_name = ?, qty = ?, price = ?, Image = ?, category_id = ? WHERE product_name = ?";

        try {
            Connection conn = DatabaseConfig.getConnection();

            PreparedStatement psm = conn.prepareStatement(sql);

            psm.setString(1, productName);
            psm.setInt(2, productQty);
            psm.setDouble(3, productPrice);
            psm.setString(4, productImage);
            psm.setInt(5, productCategory);
            psm.setString(6, proName);

            int rowsInserted = psm.executeUpdate();

            if (rowsInserted > 0) {
                JOptionPane.showMessageDialog(null, "Product update successfully!", "Success", JOptionPane.INFORMATION_MESSAGE);
                ProductForm productForm = new ProductForm();
                productForm.setVisible(true);
                dispose();

            } else {
                JOptionPane.showMessageDialog(null, "Failed to update product.", "Error", JOptionPane.ERROR_MESSAGE);
            }

        } catch (SQLException e) {

        }
    }//GEN-LAST:event_updateProductActionPerformed

    void getAllCategorys() {
        try {

            Connection cont = DatabaseConfig.getConnection();

            String query = "SELECT * FROM category";

            PreparedStatement stmt = cont.prepareStatement(query);

            ResultSet rs = stmt.executeQuery();

            while (rs.next()) {
                comboCategory.addItem(rs.getString("category_name"));
            }

        } catch (SQLException ex) {

        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UpdateProductForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UpdateProductForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UpdateProductForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UpdateProductForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UpdateProductForm("").setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnChooseImage;
    private javax.swing.JComboBox<String> comboCategory;
    private javax.swing.JLabel createTitle;
    private javax.swing.JTextField inputName;
    private javax.swing.JTextField inputPrice;
    private javax.swing.JTextField inputQty;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JButton updateProduct;
    // End of variables declaration//GEN-END:variables
}
